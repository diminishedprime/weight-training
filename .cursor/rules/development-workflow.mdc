---
description: development workflow and tooling
---
# Development Workflow & Tooling

## Development Setup
1. **Start Development Environment**:
   ```bash
   pnpm db:start     # Start local Supabase
   pnpm dev          # Start Next.js with Turbopack
   ```

2. **Database Development Cycle**:
   ```bash
   pnpm db:new-migration name     # Create new migration
   # Edit migration file in supabase/migrations/
   pnpm db:reset                  # Apply migrations & regenerate types
   ```

## Database Workflow
- **Migration Files**: Sequential numbering `000000000000XX_name.sql`
- **Type Generation**: Auto-generates [src/database.types.ts](mdc:src/database.types.ts)
- **Testing**: Add tests in [supabase/tests/](mdc:supabase/tests/) for new functions
- **Documentation**: Follow [DATABASE_STRATEGY.md](mdc:docs/DATABASE_STRATEGY.md) standards

## Code Quality & Formatting
- **Format Code**: `pnpm format` (runs both UI and SQL formatting)
- **Linting**: `pnpm lint` (ESLint with Next.js config)
- **Type Checking**: TypeScript in strict mode
- **Pre-commit**: Husky hooks for quality checks

## Testing Workflow
```bash
pnpm test                    # Run all tests
pnpm test:watch             # Watch mode for development
pnpm test:ui                # Visual test runner
pnpm test:coverage          # Coverage report
pnpm test:mutation          # Mutation testing with Stryker
pnpm db:test               # Database function tests
```

## File Organization Standards
- **Pages**: [src/app/](mdc:src/app/) with App Router structure
- **Components**: Shared in [src/components/](mdc:src/components/), page-specific in `_components/`
- **Actions**: Colocated `actions.ts` files with components
- **Types**: Database types in [src/common-types.ts](mdc:src/common-types.ts)
- **Documentation**: All strategies in [docs/](mdc:docs/)

## Git & Deployment
- **Branch**: Currently on `chris/nextjs` branch
- **Commit Messages**: Descriptive, following conventional commits
- **Database**: Migrations not yet deployed to production
- **Environment**: Local development with Supabase instance

## Key Configuration Files
- [package.json](mdc:package.json) - Scripts and dependencies
- [next.config.ts](mdc:next.config.ts) - Next.js configuration
- [vitest.config.ts](mdc:vitest.config.ts) - Test configuration  
- [eslint.config.mjs](mdc:eslint.config.mjs) - Linting rules
- [tsconfig.json](mdc:tsconfig.json) - TypeScript configuration
- [supabase/config.toml](mdc:supabase/config.toml) - Supabase local config

## Development Tools
- **Package Manager**: pnpm with workspace configuration
- **Database**: Supabase PostgreSQL with local development
- **Build Tool**: Next.js 15 with Turbopack for development
- **Testing**: Vitest + Testing Library + Stryker
- **Formatting**: Prettier + sql-formatter for SQL files
- **Type Safety**: TypeScript strict mode + generated Supabase types

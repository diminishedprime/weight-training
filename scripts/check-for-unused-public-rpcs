#!/usr/bin/env bash
# check-for-unused-public-rpcs
# Finds all public Postgres functions in migrations and checks if they are used in src/ (excluding database.types.ts)

set -euo pipefail

ALL_FUNCS_FILE="docs/all-functions.tmp"
USED_FUNCS=()
NOT_USED_FUNCS=()
OUTPUT_FILE="docs/PUBLIC-RPCS-USAGE.md"

# 1. Get all public function names from migrations
rg -oP 'CREATE\s+(OR\s+REPLACE\s+)?FUNCTION\s+public\.([a-zA-Z0-9_]+)' --replace '$2' --no-filename supabase/migrations/ | sort | uniq >"$ALL_FUNCS_FILE"

# 2. Iterate through each function and check usage
while IFS= read -r func; do
    if rg --ignore-case --glob '!database.types.ts' --no-heading --no-filename "\\b$func\\b" src/ >/dev/null; then
        USED_FUNCS+=("$func")
    else
        NOT_USED_FUNCS+=("$func")
    fi
done <"$ALL_FUNCS_FILE"

# 3. Generate markdown report
{
    echo "# Public RPC Usage Report"
    echo
    echo "This file was generated by the \`./scripts/check-for-unused-public-rpcs\` script."
    echo
    echo "If you're confused because git is showing changes to this file, it's likely"
    echo "because you added a new public RPC function in a migration, but haven't used it"
    echo "in code, yet. Generally speaking, this is something you'll want to be avoiding,"
    echo "though if you have a good reason to do so, you can ignore this report changing."
    echo
    echo "## Used"
    echo
    for f in "${USED_FUNCS[@]}"; do
        echo "- $f"
    done
    echo
    echo "## Not Used"
    echo
    for f in "${NOT_USED_FUNCS[@]}"; do
        echo "- [ ] $f"
    done
} >"$OUTPUT_FILE"

# 4. Clean up
rm "$ALL_FUNCS_FILE"

echo "Report generated: $OUTPUT_FILE"
